}
}
rm(list = ls()); invisible(gc())
gen_geo <- function(img, x1, y1, x2, y2){
img_info <- image_info(img)
res <- paste0((x2-x1)/33.87*img_info$width, "x",
(y2-y1)/19.05*img_info$height, "+",
(x1)/33.87*img_info$width, "+",
(y1)/19.05*img_info$height)
return(res)
}
path_dir_ori <- list.dirs(path = "../slide_ori")[-1]
i_dir <- 1
for (i_dir in 1:length(path_dir_ori)) {
print(i_dir) #顯示進度。
img_all <- list()
# meta info
x1 <- 1.33; y1 <- 3.06
x2 <- 27.28; y2 <- 17.68
# read and cut image
path_img_all <- list.files(path_dir_ori[i_dir], full.names = T) %>% mixedsort()
for (i_img in 1:length(path_img_all)) {
img <- image_read(path_img_all[i_img])
img_fix <- image_crop(image = img, geometry = gen_geo(img, x1, y1, x2, y2))
img_all <- list.append(img_all, img_fix)
}
# save image
path_img_all_fix <- path_img_all %>% gsub("slide_ori", "slide_fix", .)
path_dir_fix <- path_img_all_fix[1] %>% dirname()
if (!dir.exists(path_dir_fix)) dir.create(path = path_dir_fix, recursive = T)
# - 製造存檔的檔名
img_num <- length(path_img_all)
num_digit <- img_num %>% nchar()
tmp <- paste("img", formatC(1:img_num, width = num_digit, flag = "0"), sep = "_")
img_ext <- file_ext(path_img_all_fix) %>% tolower()
img_nn <- paste0(path_dir_fix, "/", tmp, ".", img_ext)
for (i_img in 1:img_num) {
image_write(image = img_all[[i_img]], path = img_nn[i_img])
}
}
rm(list = ls()); invisible(gc())
library(knitr)
library(dplyr)
library(data.table)
library(magick)
library(rlist)
library(gtools)
library(tools)
opts_chunk$set(
# 這邊是針對所有chunk的設定
echo = TRUE,
message = FALSE,
warning = FALSE
)
# source("")
img_all <- list.files("../slide_ori/", full.names = T)
print(img_all[1])
img <- image_read(img_all[1])
img_all
print(img_all[1])
img <- image_read(img_all[1])
img_all
img_all
img_all <- list.files("../slide_ori/", full.names = T)
print(img_all[1])
img <- image_read(img_all[1])
print(img)
img_info <- image_info(img)
img_info$width
img_info$height
x1 <- 1.33
y1 <- 3.06
x2 <- 27.28
y2 <- 17.68
str_geo <- paste0((x2-x1)/33.87*img_info$width, "x",
(y2-y1)/19.05*img_info$height, "+",
(x1)/33.87*img_info$width, "+",
(y1)/19.05*img_info$height)
img_fix <- image_crop(image = img, geometry = str_geo)
img_fix
image_write(image = img_fix, path = "../test.png")
x1 <- 1.33
y1 <- 3.06
x2 <- 27.28
y2 <- 17.68
str_geo <- paste0((x2-x1)/33.87*img_info$width, "x",
(y2-y1)/19.05*img_info$height, "+",
(x1)/33.87*img_info$width, "+",
(y1)/19.05*img_info$height)
img_fix <- image_crop(image = img, geometry = str_geo)
path_img_all
rm(list = ls()); invisible(gc())
gen_geo <- function(img, x1, y1, x2, y2){
img_info <- image_info(img)
res <- paste0((x2-x1)/33.87*img_info$width, "x",
(y2-y1)/19.05*img_info$height, "+",
(x1)/33.87*img_info$width, "+",
(y1)/19.05*img_info$height)
return(res)
}
path_dir_ori <- list.dirs(path = "../slide_ori")[-1]
i_dir <- 1
print(i_dir) #顯示進度。
img_all <- list()
# meta info
x1 <- 1.33; y1 <- 3.06
x2 <- 27.28; y2 <- 17.68
# read and cut image
path_img_all <- list.files(path_dir_ori[i_dir], full.names = T) %>% mixedsort()
i_img <- 1
img <- image_read(path_img_all[i_img])
img <- image_read(path_img_all[i_img])
i_img
length(path_img_all)
path_img_all
path_dir_ori
path_dir_ori <- list.dirs(path = "../slide_ori")[-1]
path_dir_ori
rm(list = ls()); invisible(gc())
gen_geo <- function(img, x1, y1, x2, y2){
img_info <- image_info(img)
res <- paste0((x2-x1)/33.87*img_info$width, "x",
(y2-y1)/19.05*img_info$height, "+",
(x1)/33.87*img_info$width, "+",
(y1)/19.05*img_info$height)
return(res)
}
path_dir_ori <- list.dirs(path = "../slide_ori")[-1]
path_dir_ori
print(i_dir) #顯示進度。
img_all <- list()
i_dir <- 1
print(i_dir) #顯示進度。
img_all <- list()
# meta info
x1 <- 1.33; y1 <- 3.06
x2 <- 27.28; y2 <- 17.68
# read and cut image
path_img_all <- list.files(path_dir_ori[i_dir], full.names = T) %>% mixedsort()
i_img <- 1
img <- image_read(path_img_all[i_img])
img_fix <- image_crop(image = img, geometry = gen_geo(img, x1, y1, x2, y2))
img_all <- list.append(img_all, img_fix)
img
# save image
path_img_all_fix <- path_img_all %>% gsub("slide_ori", "slide_fix", .)
path_dir_fix <- path_img_all_fix[1] %>% dirname()
path_dir_fix
if (!dir.exists(path_dir_fix)) dir.create(path = path_dir_fix, recursive = T)
# - 製造存檔的檔名
img_num <- length(path_img_all)
num_digit <- img_num %>% nchar()
img_num
img_num <- length(path_img_all)
num_digit <- img_num %>% nchar()
tmp <- paste("img", formatC(1:img_num, width = num_digit, flag = "0"), sep = "_")
img_ext <- file_ext(path_img_all_fix) %>% tolower()
img_nn <- paste0(path_dir_fix, "/", tmp, ".", img_ext)
img_nn
img_num
path_img_all
path_img_all_fix
gen_img.name <- function(path_img_all, path_dir_fix){
img_num <- length(path_img_all)
num_digit <- img_num %>% nchar()
tmp <- paste("img", formatC(1:img_num, width = num_digit, flag = "0"), sep = "_")
img_ext <- file_ext(path_img_all) %>% tolower()
img_nn <- paste0(path_dir_fix, "/", tmp, ".", img_ext)
return(img_nn)
}
gen_img.name(path_img_all, path_dir_fix)
rm(list = ls()); invisible(gc())
gen_geo <- function(img, x1, y1, x2, y2){
img_info <- image_info(img)
res <- paste0((x2-x1)/33.87*img_info$width, "x",
(y2-y1)/19.05*img_info$height, "+",
(x1)/33.87*img_info$width, "+",
(y1)/19.05*img_info$height)
return(res)
}
gen_img.name <- function(path_img_all, path_dir_fix){
img_num <- length(path_img_all)
num_digit <- img_num %>% nchar()
tmp <- paste("img", formatC(1:img_num, width = num_digit, flag = "0"), sep = "_")
img_ext <- file_ext(path_img_all) %>% tolower()
img_nn <- paste0(path_dir_fix, "/", tmp, ".", img_ext)
return(img_nn)
}
path_dir_ori <- list.dirs(path = "../slide_ori")[-1]
for (i_dir in 1:length(path_dir_ori)) {
img_all <- list()
# meta info
x1 <- 1.33; y1 <- 3.06
x2 <- 27.28; y2 <- 17.68
# read and cut image
path_img_all <- list.files(path_dir_ori[i_dir], full.names = T) %>% mixedsort()
for (i_img in 1:length(path_img_all)) {
img <- image_read(path_img_all[i_img])
img_fix <- image_crop(image = img, geometry = gen_geo(img, x1, y1, x2, y2))
img_all <- list.append(img_all, img_fix)
}
# save image
path_img_all_fix <- path_img_all %>% gsub("slide_ori", "slide_fix", .)
path_dir_fix <- path_img_all_fix[1] %>% dirname()
if (!dir.exists(path_dir_fix)) dir.create(path = path_dir_fix, recursive = T)
img_nn <- gen_img.name(path_img_all, path_dir_fix)
for (i_img in 1:length(path_img_all)) {
image_write(image = img_all[[i_img]], path = img_nn[i_img])
}
}
rm(list = ls()); invisible(gc())
gen_geo <- function(img, x1, y1, x2, y2){
img_info <- image_info(img)
res <- paste0((x2-x1)/33.87*img_info$width, "x",
(y2-y1)/19.05*img_info$height, "+",
(x1)/33.87*img_info$width, "+",
(y1)/19.05*img_info$height)
return(res)
}
gen_img.name <- function(path_img_all, path_dir_fix){
img_num <- length(path_img_all)
num_digit <- img_num %>% nchar()
tmp <- paste("img", formatC(1:img_num, width = num_digit, flag = "0"), sep = "_")
img_ext <- file_ext(path_img_all) %>% tolower()
img_nn <- paste0(path_dir_fix, "/", tmp, ".", img_ext)
return(img_nn)
}
path_dir_ori <- list.dirs(path = "../slide_ori")[-1]
for (i_dir in 1:length(path_dir_ori)) {
img_all <- list()
# meta info
x1 <- 1.33; y1 <- 3.06
x2 <- 27.28; y2 <- 17.68
# read and cut image
path_img_all <- list.files(path_dir_ori[i_dir], full.names = T) %>% mixedsort()
for (i_img in 1:length(path_img_all)) {
img <- image_read(path_img_all[i_img])
img_fix <- image_crop(image = img, geometry = gen_geo(img, x1, y1, x2, y2))
img_all <- list.append(img_all, img_fix)
}
# save image
path_img_all_fix <- path_img_all %>% gsub("slide_ori", "slide_fix", .)
path_dir_fix <- path_img_all_fix[1] %>% dirname()
if (!dir.exists(path_dir_fix)) dir.create(path = path_dir_fix, recursive = T)
img_nn <- gen_img.name(path_img_all, path_dir_fix)
for (i_img in 1:length(path_img_all)) {
image_write(image = img_all[[i_img]], path = img_nn[i_img])
}
}
rm(list = ls()); invisible(gc())
gen_geo <- function(img, x1, y1, x2, y2){
img_info <- image_info(img)
res <- paste0((x2-x1)/33.87*img_info$width, "x",
(y2-y1)/19.05*img_info$height, "+",
(x1)/33.87*img_info$width, "+",
(y1)/19.05*img_info$height)
return(res)
}
gen_img.name <- function(path_img_all, path_dir_fix){
img_num <- length(path_img_all)
num_digit <- img_num %>% nchar()
tmp <- paste("img", formatC(1:img_num, width = num_digit, flag = "0"), sep = "_")
img_ext <- file_ext(path_img_all) %>% tolower()
img_nn <- paste0(path_dir_fix, "/", tmp, ".", img_ext)
return(img_nn)
}
path_dir_ori <- list.dirs(path = "../slide_ori")[-1]
for (i_dir in 1:length(path_dir_ori)) {
img_all <- list()
# meta info
x1 <- 1.33; y1 <- 3.06
x2 <- 27.28; y2 <- 17.68
# read and cut image
path_img_all <- list.files(path_dir_ori[i_dir], full.names = T) %>% mixedsort()
for (i_img in 1:length(path_img_all)) {
img <- image_read(path_img_all[i_img])
img_fix <- image_crop(image = img, geometry = gen_geo(img, x1, y1, x2, y2))
img_all <- list.append(img_all, img_fix)
}
# save image
path_img_all_fix <- path_img_all %>% gsub("slide_ori", "slide_fix", .)
path_dir_fix <- path_img_all_fix[1] %>% dirname()
if (!dir.exists(path_dir_fix)) dir.create(path = path_dir_fix, recursive = T)
img_nn <- gen_img.name(path_img_all, path_dir_fix)
for (i_img in 1:length(path_img_all)) {
image_write(image = img_all[[i_img]], path = img_nn[i_img])
}
}
rm(list = ls()); invisible(gc())
gen_geo <- function(img, x1, y1, x2, y2){
img_info <- image_info(img)
res <- paste0((x2-x1)/33.87*img_info$width, "x",
(y2-y1)/19.05*img_info$height, "+",
(x1)/33.87*img_info$width, "+",
(y1)/19.05*img_info$height)
return(res)
}
gen_img.name <- function(path_img_all, path_dir_fix){
img_num <- length(path_img_all)
num_digit <- img_num %>% nchar()
tmp <- paste("img", formatC(1:img_num, width = num_digit, flag = "0"), sep = "_")
img_ext <- file_ext(path_img_all) %>% tolower()
img_nn <- paste0(path_dir_fix, "/", tmp, ".", img_ext)
return(img_nn)
}
path_dir_ori <- list.dirs(path = "../slide_ori")[-1]
for (i_dir in 1:length(path_dir_ori)) {
img_all <- list()
# meta info
x1 <- 1.33; y1 <- 3.06
x2 <- 27.28; y2 <- 17.68
# read and cut image
path_img_all <- list.files(path_dir_ori[i_dir], full.names = T) %>% mixedsort()
for (i_img in 1:length(path_img_all)) {
img <- image_read(path_img_all[i_img])
img_fix <- image_crop(image = img, geometry = gen_geo(img, x1, y1, x2, y2))
img_all <- list.append(img_all, img_fix)
}
# save image
path_img_all_fix <- path_img_all %>% gsub("slide_ori", "slide_fix", .)
path_dir_fix <- path_img_all_fix[1] %>% dirname()
if (!dir.exists(path_dir_fix)) dir.create(path = path_dir_fix, recursive = T)
img_nn <- gen_img.name(path_img_all, path_dir_fix)
for (i_img in 1:length(path_img_all)) {
image_write(image = img_all[[i_img]], path = img_nn[i_img])
}
}
rm(list = ls()); invisible(gc())
gen_geo <- function(img, x1, y1, x2, y2){
img_info <- image_info(img)
res <- paste0((x2-x1)/33.87*img_info$width, "x",
(y2-y1)/19.05*img_info$height, "+",
(x1)/33.87*img_info$width, "+",
(y1)/19.05*img_info$height)
return(res)
}
gen_img.name <- function(path_img_all, path_dir_fix){
img_num <- length(path_img_all)
num_digit <- img_num %>% nchar()
tmp <- paste("img", formatC(1:img_num, width = num_digit, flag = "0"), sep = "_")
img_ext <- file_ext(path_img_all) %>% tolower()
img_nn <- paste0(path_dir_fix, "/", tmp, ".", img_ext)
return(img_nn)
}
path_dir_ori <- list.dirs(path = "../slide_ori")[-1]
for (i_dir in 1:length(path_dir_ori)) {
img_all <- list()
# meta info
x1 <- 1.33; y1 <- 3.06
x2 <- 27.28; y2 <- 17.68
# read and cut image
path_img_all <- list.files(path_dir_ori[i_dir], full.names = T) %>% mixedsort()
for (i_img in 1:length(path_img_all)) {
img <- image_read(path_img_all[i_img])
img_fix <- image_crop(image = img, geometry = gen_geo(img, x1, y1, x2, y2))
img_all <- list.append(img_all, img_fix)
}
# save image
path_img_all_fix <- path_img_all %>% gsub("slide_ori", "slide_fix", .)
path_dir_fix <- path_img_all_fix[1] %>% dirname()
if (!dir.exists(path_dir_fix)) dir.create(path = path_dir_fix, recursive = T)
img_nn <- gen_img.name(path_img_all, path_dir_fix)
for (i_img in 1:length(path_img_all)) {
image_write(image = img_all[[i_img]], path = img_nn[i_img])
}
}
rm(list = ls()); invisible(gc())
gen_geo <- function(img, x1, y1, x2, y2){
img_info <- image_info(img)
res <- paste0((x2-x1)/33.87*img_info$width, "x",
(y2-y1)/19.05*img_info$height, "+",
(x1)/33.87*img_info$width, "+",
(y1)/19.05*img_info$height)
return(res)
}
gen_img.name <- function(path_img_all, path_dir_fix){
img_num <- length(path_img_all)
num_digit <- img_num %>% nchar()
tmp <- paste("img", formatC(1:img_num, width = num_digit, flag = "0"), sep = "_")
img_ext <- file_ext(path_img_all) %>% tolower()
img_nn <- paste0(path_dir_fix, "/", tmp, ".", img_ext)
return(img_nn)
}
path_dir_ori <- list.dirs(path = "../slide_ori")[-1]
for (i_dir in 1:length(path_dir_ori)) {
img_all <- list()
# meta info
x1 <- 1.33; y1 <- 3.06
x2 <- 27.28; y2 <- 17.68
# read and cut image
path_img_all <- list.files(path_dir_ori[i_dir], full.names = T) %>% mixedsort()
for (i_img in 1:length(path_img_all)) {
img <- image_read(path_img_all[i_img])
img_fix <- image_crop(image = img, geometry = gen_geo(img, x1, y1, x2, y2))
img_all <- list.append(img_all, img_fix)
}
# save image
path_img_all_fix <- path_img_all %>% gsub("slide_ori", "slide_fix", .)
path_dir_fix <- path_img_all_fix[1] %>% dirname()
if (!dir.exists(path_dir_fix)) dir.create(path = path_dir_fix, recursive = T)
img_nn <- gen_img.name(path_img_all, path_dir_fix)
for (i_img in 1:length(path_img_all)) {
image_write(image = img_all[[i_img]], path = img_nn[i_img])
}
}
rm(list = ls()); invisible(gc())
gen_geo <- function(img, x1, y1, x2, y2){
img_info <- image_info(img)
res <- paste0((x2-x1)/33.87*img_info$width, "x",
(y2-y1)/19.05*img_info$height, "+",
(x1)/33.87*img_info$width, "+",
(y1)/19.05*img_info$height)
return(res)
}
gen_img.name <- function(path_img_all, path_dir_fix){
img_num <- length(path_img_all)
num_digit <- img_num %>% nchar()
tmp <- paste("img", formatC(1:img_num, width = num_digit, flag = "0"), sep = "_")
img_ext <- file_ext(path_img_all) %>% tolower()
img_nn <- paste0(path_dir_fix, "/", tmp, ".", img_ext)
return(img_nn)
}
path_dir_ori <- list.dirs(path = "../slide_ori")[-1]
for (i_dir in 1:length(path_dir_ori)) {
img_all <- list()
# meta info
x1 <- 1.33; y1 <- 3.06
x2 <- 27.28; y2 <- 17.68
# read and cut image
path_img_all <- list.files(path_dir_ori[i_dir], full.names = T) %>% mixedsort()
for (i_img in 1:length(path_img_all)) {
img <- image_read(path_img_all[i_img])
img_fix <- image_crop(image = img, geometry = gen_geo(img, x1, y1, x2, y2))
img_all <- list.append(img_all, img_fix)
}
# save image
path_img_all_fix <- path_img_all %>% gsub("slide_ori", "slide_fix", .)
path_dir_fix <- path_img_all_fix[1] %>% dirname()
if (!dir.exists(path_dir_fix)) dir.create(path = path_dir_fix, recursive = T)
img_nn <- gen_img.name(path_img_all, path_dir_fix)
for (i_img in 1:length(path_img_all)) {
image_write(image = img_all[[i_img]], path = img_nn[i_img])
}
}
rm(list = ls()); invisible(gc())
library(knitr)
library(dplyr)
library(data.table)
library(magick)
library(rlist)
library(gtools)
library(tools)
opts_chunk$set(
# 這邊是針對所有chunk的設定
echo = TRUE,
message = FALSE,
warning = FALSE
)
# source("")
img_all <- list.files("../slide_ori/", full.names = T)
# print(img_all[1])
img <- image_read(img_all[1])
img_all
list.files("../slide_ori/", full.names = T)
img_all <- list.files("../slide_ori/test/", full.names = T)
img_all
# print(img_all[1])
img <- image_read(img_all[1])
print(img)
img_info <- image_info(img)
x1 <- 1.33
y1 <- 3.06
x2 <- 27.28
y2 <- 17.68
str_geo <- paste0((x2-x1)/33.87*img_info$width, "x",
(y2-y1)/19.05*img_info$height, "+",
(x1)/33.87*img_info$width, "+",
(y1)/19.05*img_info$height)
img_fix <- image_crop(image = img, geometry = str_geo)
image_write(image = img_fix, path = "../test.png")
rm(list = ls()); invisible(gc())
library(knitr)
library(dplyr)
library(data.table)
library(magick)
library(rlist)
library(gtools)
library(tools)
opts_chunk$set(
# 這邊是針對所有chunk的設定
echo = TRUE,
message = FALSE,
warning = FALSE
)
# source("")
img_all <- list.files("../slide_ori/test/", full.names = T)
# print(img_all[1])
img <- image_read(img_all[1])
print(img)
img_info <- image_info(img)
# img_info$width
# img_info$height
x1 <- 1.54
y1 <- 4.37
x2 <- 26.19
y2 <- 16.24
str_geo <- paste0((x2-x1)/33.87*img_info$width, "x",
(y2-y1)/19.05*img_info$height, "+",
(x1)/33.87*img_info$width, "+",
(y1)/19.05*img_info$height)
img_fix <- image_crop(image = img, geometry = str_geo)
image_write(image = img_fix, path = "../test.png")
